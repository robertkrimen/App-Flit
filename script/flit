#!/usr/bin/env perl

use strict;
use warnings;

use LWP::UserAgent;

my $agent = LWP::UserAgent->new;

my $target = join ' ', @ARGV;

die "No target to flit" unless $target;

sub fetch {
    my $uri = shift;
    my $response = $agent->get( $uri );

    die "Unable to get URI ($uri)" unless $response->is_success;
    print $response->content;
}

{
    local $_ = $target;
    if ( 0 ) {
    }
    elsif ( s/^\s*jquery-*ui[-\s]*// ) {
        my $min = s/(?<=\d)?min\b//i;

        s/\b([\d\.\- ]+)\b//; my $version = $1;
        $version = 1 unless defined $version && length $version;
        s/^\s*//, s/\s*$// for $version;
        $version =~ s/[\.\- ]+/\./g; # Normalize version

        die "Do not know how to flit jquery target ($target)" if m/[^- ]+/;

        if ( $version eq '1' ) {
        }
        elsif ( $version =~ m/^1\.[567]$/ ) {
        }
        elsif ( grep { $version eq $_ } qw/ 1.5.2 1.5.3 1.6 1.7.0 1.7.1 1.7.2 / ) {
        }
        else {
            die "Do not know hot to flit jquery ui target ($target) for version ($version)";
        }

        if (0) {
        warn "Flit jquery\n";
        warn "min\n" if $min;
        warn "version: $version\n";
        }

        my $uri = "http://ajax.googleapis.com/ajax/libs/jqueryui/$version/jquery-ui";
        $uri .= ".min" if $min;
        $uri .= ".js";
    
        fetch $uri;
    }
    elsif ( s/^\s*jquery[-\s]*// ) {

        # TODO jquerymin ?

        my $min = s/(?<=\d)?min\b//i;

        s/\b([\d\.\- ]+)\b//; my $version = $1;
        $version = 1 unless defined $version && length $version;
        s/^\s*//, s/\s*$// for $version;
        $version =~ s/[\.\- ]+/\./g; # Normalize version

        die "Do not know how to flit jquery target ($target)" if m/[^- ]+/;

        my $uri = "http://ajax.googleapis.com/ajax/libs/jquery/$version/jquery";
        $uri .= ".min" if $min;
        $uri .= ".js";
    
        fetch $uri;
    }
    elsif ( s/^\s*prototype[-\s]*// ) {

        s/\b([\d\.\- ]+)\b//; my $version = $1;
        $version = 1 unless defined $version && length $version;
        s/^\s*//, s/\s*$// for $version;
        $version =~ s/[\.\- ]+/\./g; # Normalize version

        if ( $version eq '1' ) {
        }
        elsif ( $version =~ m/^1\.[6](?:\.[01])?$/ ) {
        }
        elsif ( grep { $version eq $_ } qw/ 1.6.0.2 1.6.0.3 1.6.1.0 / ) {
        }
        else {
            die "Do not know hot to flit prototype target ($target) for version ($version)";
        }

        my $uri = "http://ajax.googleapis.com/ajax/libs/prototype/$version/prototype.js";
    
        fetch $uri;
    }
    else {
        die "Do not know how to flit target ($target)";
    }
}
